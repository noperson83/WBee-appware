# Generated by Django 5.2 on 2025-06-20 04:04

import datetime
import django.core.validators
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Asset",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "asset_number",
                    models.CharField(
                        db_index=True,
                        help_text="Unique asset identifier (A001, VEH-123, etc.)",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Asset name/description", max_length=200
                    ),
                ),
                (
                    "asset_type",
                    models.CharField(
                        help_text="Specific type within category (configurable)",
                        max_length=50,
                    ),
                ),
                (
                    "manufacturer",
                    models.CharField(
                        blank=True, help_text="Manufacturer/Brand", max_length=100
                    ),
                ),
                (
                    "model",
                    models.CharField(
                        blank=True, help_text="Model number/name", max_length=100
                    ),
                ),
                (
                    "year",
                    models.PositiveIntegerField(
                        blank=True, help_text="Year manufactured", null=True
                    ),
                ),
                (
                    "serial_number",
                    models.CharField(
                        blank=True, help_text="Serial number", max_length=100
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Detailed description"),
                ),
                (
                    "specifications",
                    models.JSONField(
                        blank=True, default=dict, help_text="Technical specifications"
                    ),
                ),
                (
                    "primary_image",
                    models.ImageField(
                        blank=True,
                        help_text="Primary asset photo",
                        null=True,
                        upload_to="uploads/assets/images/%Y/%m/%d/",
                    ),
                ),
                (
                    "purchase_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Original purchase price",
                        max_digits=18,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "current_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Current estimated value",
                        max_digits=18,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "purchase_date",
                    models.DateField(blank=True, help_text="Date purchased", null=True),
                ),
                (
                    "warranty_expiration",
                    models.DateField(
                        blank=True, help_text="Warranty expiration date", null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        default="available",
                        help_text="Asset status (configurable per business type)",
                        max_length=50,
                    ),
                ),
                (
                    "location_status",
                    models.CharField(
                        default="office",
                        help_text="Physical location status (configurable)",
                        max_length=50,
                    ),
                ),
                (
                    "condition",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("needs_repair", "Needs Repair"),
                            ("out_of_service", "Out of Service"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("last_maintenance_date", models.DateField(blank=True, null=True)),
                ("next_maintenance_date", models.DateField(blank=True, null=True)),
                ("maintenance_notes", models.TextField(blank=True)),
                (
                    "usage_hours",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Total usage hours (for equipment)",
                        max_digits=10,
                    ),
                ),
                (
                    "mileage",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Current mileage (for vehicles)",
                        null=True,
                    ),
                ),
                (
                    "is_personal",
                    models.BooleanField(
                        default=False,
                        help_text="Is this a personal asset of an employee?",
                    ),
                ),
                (
                    "is_billable",
                    models.BooleanField(
                        default=True, help_text="Can this asset be billed to clients?"
                    ),
                ),
                (
                    "hourly_rate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Hourly billing rate for this asset",
                        max_digits=10,
                        null=True,
                    ),
                ),
                ("insurance_policy", models.CharField(blank=True, max_length=100)),
                (
                    "license_plate",
                    models.CharField(
                        blank=True, help_text="License plate (vehicles)", max_length=20
                    ),
                ),
                ("registration_expiration", models.DateField(blank=True, null=True)),
                (
                    "custom_fields",
                    models.JSONField(
                        blank=True, default=dict, help_text="Custom asset data"
                    ),
                ),
                (
                    "tags",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Flexible tags for search and grouping",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_retired", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["asset_number"],
            },
        ),
        migrations.CreateModel(
            name="AssetAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("start_date", models.DateField(default=datetime.date.today)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("purpose", models.CharField(blank=True, max_length=200)),
                ("notes", models.TextField(blank=True)),
                ("checked_out_by", models.CharField(blank=True, max_length=200)),
                ("checked_in_by", models.CharField(blank=True, max_length=200)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="AssetCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        help_text="Vehicle, Tool, Equipment, Furniture, etc.",
                        max_length=100,
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True, help_text="URL friendly identifier", max_length=120
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of this asset category"
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True, help_text="Font Awesome icon class", max_length=50
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="#007bff", help_text="Hex color code", max_length=7
                    ),
                ),
                (
                    "default_depreciation_years",
                    models.PositiveIntegerField(
                        default=5, help_text="Default depreciation period in years"
                    ),
                ),
                ("requires_maintenance", models.BooleanField(default=True)),
                (
                    "default_maintenance_interval_days",
                    models.PositiveIntegerField(
                        default=90, help_text="Default maintenance interval in days"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["business_category", "name"],
            },
        ),
        migrations.CreateModel(
            name="AssetDepreciation",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("straight_line", "Straight Line"),
                            ("declining_balance", "Declining Balance"),
                            ("sum_of_years", "Sum of Years Digits"),
                            ("units_of_production", "Units of Production"),
                        ],
                        default="straight_line",
                        max_length=20,
                    ),
                ),
                ("basis_value", models.DecimalField(decimal_places=2, max_digits=18)),
                (
                    "salvage_value",
                    models.DecimalField(decimal_places=2, default=0, max_digits=18),
                ),
                ("useful_life_years", models.PositiveIntegerField()),
                (
                    "annual_depreciation",
                    models.DecimalField(decimal_places=2, max_digits=18),
                ),
                (
                    "accumulated_depreciation",
                    models.DecimalField(decimal_places=2, default=0, max_digits=18),
                ),
                ("depreciation_year", models.PositiveIntegerField()),
            ],
            options={
                "ordering": ["asset", "depreciation_year"],
            },
        ),
        migrations.CreateModel(
            name="AssetMaintenanceRecord",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "maintenance_type",
                    models.CharField(
                        choices=[
                            ("routine", "Routine Maintenance"),
                            ("repair", "Repair"),
                            ("inspection", "Inspection"),
                            ("upgrade", "Upgrade"),
                            ("calibration", "Calibration"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Description of work performed"),
                ),
                (
                    "performed_by",
                    models.CharField(
                        help_text="Who performed the maintenance", max_length=200
                    ),
                ),
                ("performed_date", models.DateField(default=datetime.date.today)),
                (
                    "labor_cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "parts_cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "external_cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("parts_used", models.JSONField(blank=True, default=list)),
                ("issue_resolved", models.BooleanField(default=True)),
                ("follow_up_required", models.BooleanField(default=False)),
                ("follow_up_date", models.DateField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-performed_date"],
            },
        ),
    ]
