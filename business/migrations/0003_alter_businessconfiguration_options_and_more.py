# Generated by Django 5.2 on 2025-06-27 05:20

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("business", "0002_add_business_type_categories"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="businessconfiguration",
            options={
                "ordering": ["name"],
                "verbose_name": "Business Configuration",
                "verbose_name_plural": "Business Configurations",
            },
        ),
        migrations.AlterModelOptions(
            name="businesstype",
            options={"ordering": ["order", "name"], "verbose_name": "Business Type"},
        ),
        migrations.AlterModelOptions(
            name="projectcategory",
            options={
                "ordering": ["order", "name"],
                "verbose_name": "Project Category",
                "verbose_name_plural": "Project Categories",
            },
        ),
        migrations.AlterUniqueTogether(
            name="projectcategory",
            unique_together={("business_type", "slug")},
        ),
        migrations.AddField(
            model_name="businessconfiguration",
            name="default_payment_terms_days",
            field=models.PositiveIntegerField(
                default=30,
                help_text="Default payment terms in days",
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(365),
                ],
            ),
        ),
        migrations.AddField(
            model_name="businessconfiguration",
            name="default_project_duration_days",
            field=models.PositiveIntegerField(
                blank=True, help_text="Default project duration in days", null=True
            ),
        ),
        migrations.AddField(
            model_name="businessconfiguration",
            name="has_regulatory_compliance",
            field=models.BooleanField(
                default=False,
                help_text="This business type has regulatory compliance requirements",
            ),
        ),
        migrations.AddField(
            model_name="businessconfiguration",
            name="is_active",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="businessconfiguration",
            name="requires_certifications",
            field=models.BooleanField(
                default=False, help_text="This business type requires certifications"
            ),
        ),
        migrations.AddField(
            model_name="businessconfiguration",
            name="requires_licensing",
            field=models.BooleanField(
                default=False, help_text="This business type requires special licensing"
            ),
        ),
        migrations.AddField(
            model_name="businessconfiguration",
            name="usage_count",
            field=models.PositiveIntegerField(
                default=0, help_text="Number of companies using this configuration"
            ),
        ),
        migrations.AddField(
            model_name="businesstype",
            name="color",
            field=models.CharField(
                default="#007bff", help_text="Hex color code", max_length=7
            ),
        ),
        migrations.AddField(
            model_name="businesstype",
            name="icon",
            field=models.CharField(
                default="üè¢", help_text="Emoji or icon class", max_length=50
            ),
        ),
        migrations.AddField(
            model_name="businesstype",
            name="is_active",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="businesstype",
            name="order",
            field=models.PositiveIntegerField(default=0, help_text="Display order"),
        ),
        migrations.AddField(
            model_name="businesstype",
            name="typical_project_size",
            field=models.CharField(
                choices=[
                    ("small", "Small (< $10K)"),
                    ("medium", "Medium ($10K - $100K)"),
                    ("large", "Large ($100K - $1M)"),
                    ("enterprise", "Enterprise (> $1M)"),
                ],
                default="medium",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="projectcategory",
            name="business_config",
            field=models.ForeignKey(
                blank=True,
                help_text="Optional: Associate with specific business configuration",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="project_categories",
                to="business.businessconfiguration",
            ),
        ),
        migrations.AddField(
            model_name="projectcategory",
            name="default_markup_percentage",
            field=models.DecimalField(
                decimal_places=2,
                default=0.0,
                help_text="Default markup percentage for this category",
                max_digits=5,
            ),
        ),
        migrations.AddField(
            model_name="projectcategory",
            name="default_unit",
            field=models.CharField(
                default="each",
                help_text="Default unit of measure (each, hour, day, etc.)",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="projectcategory",
            name="description",
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="projectcategory",
            name="is_billable",
            field=models.BooleanField(
                default=True, help_text="Can items in this category be billed?"
            ),
        ),
        migrations.AddField(
            model_name="projectcategory",
            name="requires_approval",
            field=models.BooleanField(
                default=False, help_text="Items require approval before use"
            ),
        ),
        migrations.AlterField(
            model_name="businessconfiguration",
            name="billing_model",
            field=models.CharField(
                choices=[
                    ("hourly", "Hourly Rate"),
                    ("project", "Per Project"),
                    ("product", "Per Product"),
                    ("subscription", "Subscription"),
                    ("commission", "Commission Based"),
                ],
                default="project",
                help_text="Primary billing method for this business type",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="businessconfiguration",
            name="deployment_type",
            field=models.CharField(
                choices=[
                    ("single", "Single Company"),
                    ("collaborative", "Collaborative"),
                    ("ecosystem", "Ecosystem"),
                ],
                default="single",
                help_text="How this business operates (single company, collaborative, or ecosystem)",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="businessconfiguration",
            name="description",
            field=models.TextField(
                blank=True,
                help_text="Detailed description of this business configuration",
            ),
        ),
        migrations.AlterField(
            model_name="businessconfiguration",
            name="enables_cross_selling",
            field=models.BooleanField(
                default=False,
                help_text="Enable cross-selling between partner companies",
            ),
        ),
        migrations.AlterField(
            model_name="businessconfiguration",
            name="enables_shared_clients",
            field=models.BooleanField(
                default=False, help_text="Allow client sharing between companies"
            ),
        ),
        migrations.AlterField(
            model_name="businessconfiguration",
            name="enables_shared_inventory",
            field=models.BooleanField(
                default=False, help_text="Allow inventory sharing between companies"
            ),
        ),
        migrations.AlterField(
            model_name="businessconfiguration",
            name="enables_shared_workforce",
            field=models.BooleanField(
                default=False, help_text="Allow workforce sharing between companies"
            ),
        ),
        migrations.AlterField(
            model_name="businessconfiguration",
            name="industry_details",
            field=models.TextField(
                blank=True,
                help_text="Specific industry requirements and considerations",
            ),
        ),
        migrations.AlterField(
            model_name="businessconfiguration",
            name="workflow_requirements",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="JSON configuration for business-specific workflows",
            ),
        ),
        migrations.AlterField(
            model_name="businesstype",
            name="slug",
            field=models.SlugField(blank=True, unique=True),
        ),
        migrations.AlterField(
            model_name="projectcategory",
            name="business_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="project_categories",
                to="business.businesstype",
            ),
        ),
        migrations.AlterField(
            model_name="projectcategory",
            name="slug",
            field=models.SlugField(blank=True),
        ),
        migrations.AlterUniqueTogether(
            name="projectcategory",
            unique_together={("business_config", "slug"), ("business_type", "slug")},
        ),
        migrations.CreateModel(
            name="BusinessTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(blank=True, unique=True)),
                ("description", models.TextField()),
                ("is_featured", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("usage_count", models.PositiveIntegerField(default=0)),
                (
                    "template_data",
                    models.JSONField(
                        default=dict,
                        help_text="Complete template configuration including categories, defaults, etc.",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "business_config",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="business.businessconfiguration",
                    ),
                ),
                (
                    "business_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="business.businesstype",
                    ),
                ),
            ],
            options={
                "ordering": ["-is_featured", "name"],
            },
        ),
    ]
