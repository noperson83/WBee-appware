# Generated by Django 5.2 on 2025-06-07 20:12

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('client', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Construction, Entertainment, Investigation, Consulting, etc.', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of this business category')),
                ('icon', models.CharField(blank=True, help_text='Font Awesome icon class', max_length=50)),
                ('color', models.CharField(default='#007bff', help_text='Hex color code', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('project_nickname', models.CharField(default='Projects', help_text='What to call "Projects" in this business (Jobs, Deliveries, Cases, Events, etc.)', max_length=50)),
                ('project_nickname_singular', models.CharField(default='Project', help_text='Singular form (Job, Delivery, Case, Event, etc.)', max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Business Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LocationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Office Building, Concert Venue, Crime Scene, Film Set, etc.', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of this location type')),
                ('typical_systems', models.JSONField(blank=True, default=list, help_text='Common systems/equipment for this type')),
                ('business_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_types', to='location.businesscategory')),
            ],
            options={
                'ordering': ['business_category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, help_text='Location name', max_length=200)),
                ('description', models.TextField(help_text='Detailed location description', max_length=2000)),
                ('scope_summary', models.TextField(blank=True, help_text='High-level scope overview', max_length=1000)),
                ('profile_image', models.ImageField(blank=True, help_text='Main location photo', null=True, upload_to='uploads/location/profile/%Y/%m/%d/')),
                ('location_category', models.CharField(blank=True, help_text='Urban, Rural, Indoor, Outdoor, etc. (configurable)', max_length=50)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text='Latitude coordinate', max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text='Longitude coordinate', max_digits=9, null=True)),
                ('google_maps_url', models.URLField(blank=True, help_text='Google Maps link for directions')),
                ('google_plus_code', models.CharField(blank=True, help_text='Google Plus Code (e.g., 9G8F+5W)', max_length=20)),
                ('status', models.CharField(default='prospect', help_text='Configurable status based on business type', max_length=50)),
                ('first_contact_date', models.DateField(blank=True, help_text='First contact date', null=True)),
                ('site_survey_date', models.DateField(blank=True, help_text='Site survey/assessment date', null=True)),
                ('contract_signed_date', models.DateField(blank=True, help_text='Contract/agreement date', null=True)),
                ('project_start_date', models.DateField(blank=True, help_text='First project start', null=True)),
                ('estimated_completion', models.DateField(blank=True, help_text='Estimated completion', null=True)),
                ('facility_size', models.PositiveIntegerField(blank=True, help_text='Size (sq ft, acres, seats, etc.)', null=True)),
                ('facility_size_unit', models.CharField(default='sq_ft', help_text='Unit of measurement', max_length=20)),
                ('capacity', models.PositiveIntegerField(blank=True, help_text='People capacity if applicable', null=True)),
                ('existing_systems', models.JSONField(blank=True, default=list, help_text='List of existing systems/equipment')),
                ('access_requirements', models.CharField(default='none', help_text='Configurable access requirements', max_length=50)),
                ('work_hours', models.CharField(default='standard', help_text='Configurable work hours/availability', max_length=50)),
                ('special_requirements', models.TextField(blank=True, help_text='Special safety, access, or work requirements')),
                ('emergency_contact_info', models.JSONField(blank=True, default=dict, help_text='Emergency contact information')),
                ('total_contract_value', models.DecimalField(blank=True, decimal_places=2, help_text='Total value of all contracts at this location', max_digits=18, null=True)),
                ('parking_available', models.BooleanField(default=True, help_text='Parking available for team')),
                ('loading_access', models.BooleanField(default=False, help_text='Loading/equipment access')),
                ('storage_available', models.BooleanField(default=False, help_text='On-site storage available')),
                ('custom_fields', models.JSONField(blank=True, default=dict, help_text='Custom jobsite data')),
                ('business_category', models.ForeignKey(blank=True, help_text='Type of business (Construction, Entertainment, Investigation, etc.)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='location.businesscategory')),
                ('client', models.ForeignKey(help_text='Client who owns this location', on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='client.client')),
                ('location_type', models.ForeignKey(blank=True, help_text='Type of facility/location', null=True, on_delete=django.db.models.deletion.SET_NULL, to='location.locationtype')),
            ],
            options={
                'verbose_name': 'Job Site',
                'verbose_name_plural': 'Job Sites',
                'ordering': ['-contract_signed_date', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ConfigurableChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('choice_type', models.CharField(choices=[('jobsite_type', 'Jobsite Type'), ('location_type', 'Location Type'), ('access_requirement', 'Access Requirement'), ('work_hours', 'Work Hours'), ('jobsite_status', 'Jobsite Status'), ('document_type', 'Document Type'), ('note_type', 'Note Type'), ('priority_level', 'Priority Level'), ('project_status', 'Project Status'), ('task_type', 'Task Type'), ('custom', 'Custom Field Choice')], max_length=30)),
                ('value', models.CharField(help_text='The actual value stored in database', max_length=50)),
                ('display_name', models.CharField(help_text='What users see', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of this choice')),
                ('sort_order', models.PositiveIntegerField(default=100, help_text='Display order')),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False, help_text='Default selection?')),
                ('applicable_to_all', models.BooleanField(default=True, help_text='Available to all business types?')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='location.businesscategory')),
            ],
            options={
                'ordering': ['choice_type', 'sort_order', 'display_name'],
                'indexes': [models.Index(fields=['choice_type', 'is_active'], name='location_co_choice__c4d63d_idx'), models.Index(fields=['category', 'choice_type'], name='location_co_categor_aaf231_idx')],
                'unique_together': {('category', 'choice_type', 'value')},
            },
        ),
        migrations.CreateModel(
            name='LocationDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('document_type', models.CharField(help_text='Configurable document type based on business category', max_length=50)),
                ('title', models.CharField(help_text='Document title', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Document description')),
                ('file', models.FileField(help_text='Upload document file', upload_to='uploads/location/documents/%Y/%m/%d/')),
                ('version', models.CharField(default='1.0', help_text='Document version', max_length=20)),
                ('is_current', models.BooleanField(default=True, help_text='Is this the current version?')),
                ('is_public', models.BooleanField(default=False, help_text='Visible to client?')),
                ('uploaded_by', models.CharField(blank=True, help_text='Who uploaded this', max_length=100)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='location.location')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['location', 'document_type'], name='location_lo_locatio_f72e7a_idx'), models.Index(fields=['is_current'], name='location_lo_is_curr_bf713a_idx')],
            },
        ),
        migrations.CreateModel(
            name='LocationNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('note_type', models.CharField(default='general', help_text='Configurable note type', max_length=50)),
                ('title', models.CharField(help_text='Note title', max_length=200)),
                ('content', models.TextField(help_text='Note content')),
                ('priority', models.CharField(default='normal', help_text='Configurable priority level', max_length=20)),
                ('is_client_visible', models.BooleanField(default=False, help_text='Show to client?')),
                ('requires_followup', models.BooleanField(default=False, help_text='Needs follow-up?')),
                ('followup_date', models.DateField(blank=True, help_text='Follow-up by date', null=True)),
                ('created_by', models.CharField(blank=True, help_text='Who created this note', max_length=100)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='location.location')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['location', 'note_type'], name='location_lo_locatio_12899c_idx'), models.Index(fields=['priority'], name='location_lo_priorit_b52e19_idx'), models.Index(fields=['requires_followup'], name='location_lo_require_f59cc9_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['client', 'status'], name='location_lo_client__1ada65_idx'),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['name'], name='location_lo_name_9447fa_idx'),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['status'], name='location_lo_status_45e2d1_idx'),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['contract_signed_date'], name='location_lo_contrac_9b582f_idx'),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['latitude', 'longitude'], name='location_lo_latitud_7045c4_idx'),
        ),
    ]
