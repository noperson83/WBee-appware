# Generated by Django 5.2 on 2025-06-07 20:12

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('location', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_name', models.CharField(db_index=True, help_text='Manufacturer name', max_length=200)),
                ('manufacturer_code', models.CharField(help_text='Short code (MFG001, etc.)', max_length=20, unique=True)),
                ('primary_contact_name', models.CharField(blank=True, max_length=200)),
                ('primary_email', models.EmailField(blank=True, max_length=254)),
                ('primary_phone', models.CharField(blank=True, max_length=17)),
                ('website', models.URLField(blank=True)),
                ('description', models.TextField(blank=True, max_length=2000)),
                ('logo', models.ImageField(blank=True, help_text='Manufacturer logo', null=True, upload_to='uploads/manufacturers/logos/%Y/%m/%d/')),
                ('certifications', models.JSONField(blank=True, default=list, help_text='Quality certifications (ISO, etc.)')),
                ('warranty_terms', models.TextField(blank=True, help_text='Standard warranty terms')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['company_name'],
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Devices, Wire, Food Items, Medical Supplies, etc.', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of this product category')),
                ('icon', models.CharField(blank=True, help_text='Font Awesome icon class', max_length=50)),
                ('color', models.CharField(default='#007bff', help_text='Hex color code', max_length=7)),
                ('requires_serial_numbers', models.BooleanField(default=False)),
                ('requires_expiration_dates', models.BooleanField(default=False)),
                ('requires_lot_numbers', models.BooleanField(default=False)),
                ('is_billable', models.BooleanField(default=True, help_text='Can items in this category be billed?')),
                ('default_unit_of_measure', models.CharField(default='each', help_text='Default UOM', max_length=20)),
                ('track_inventory', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('business_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_categories', to='location.businesscategory')),
            ],
            options={
                'verbose_name_plural': 'Product Categories',
                'ordering': ['business_category', 'name'],
                'unique_together': {('business_category', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sku', models.CharField(db_index=True, help_text='Stock Keeping Unit (unique identifier)', max_length=50, unique=True)),
                ('name', models.CharField(help_text='Product name', max_length=200)),
                ('product_type', models.CharField(help_text='Specific type within category (configurable)', max_length=50)),
                ('manufacturer_part_number', models.CharField(blank=True, max_length=100)),
                ('upc_code', models.CharField(blank=True, help_text='UPC/Barcode', max_length=20)),
                ('internal_part_number', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True, help_text='Product description')),
                ('specifications', models.JSONField(blank=True, default=dict, help_text='Technical specifications')),
                ('primary_image', models.ImageField(blank=True, help_text='Primary product image', null=True, upload_to='uploads/products/images/%Y/%m/%d/')),
                ('cost', models.DecimalField(decimal_places=4, help_text='Cost per unit', max_digits=18, validators=[django.core.validators.MinValueValidator(Decimal('0.0001'))])),
                ('msrp', models.DecimalField(blank=True, decimal_places=2, help_text='Manufacturer Suggested Retail Price', max_digits=18, null=True)),
                ('markup_percentage', models.DecimalField(decimal_places=2, default=25.0, help_text='Default markup percentage', max_digits=5)),
                ('unit_of_measure', models.CharField(choices=[('each', 'Each'), ('box', 'Box'), ('case', 'Case'), ('foot', 'Foot'), ('meter', 'Meter'), ('pound', 'Pound'), ('kilogram', 'Kilogram'), ('liter', 'Liter'), ('gallon', 'Gallon'), ('hour', 'Hour'), ('square_foot', 'Square Foot'), ('cubic_foot', 'Cubic Foot')], default='each', max_length=20)),
                ('units_per_package', models.PositiveIntegerField(default=1, help_text='Units per package/box')),
                ('weight', models.DecimalField(blank=True, decimal_places=4, help_text='Weight per unit', max_digits=10, null=True)),
                ('weight_unit', models.CharField(default='lbs', help_text='Weight unit', max_length=10)),
                ('length', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('width', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('dimension_unit', models.CharField(default='inches', help_text='Dimension unit', max_length=10)),
                ('track_inventory', models.BooleanField(default=True)),
                ('current_stock', models.DecimalField(decimal_places=4, default=0, help_text='Current stock level', max_digits=12)),
                ('minimum_stock', models.DecimalField(decimal_places=4, default=0, help_text='Minimum stock level (reorder point)', max_digits=12)),
                ('maximum_stock', models.DecimalField(blank=True, decimal_places=4, help_text='Maximum stock level', max_digits=12, null=True)),
                ('requires_serial_tracking', models.BooleanField(default=False)),
                ('requires_lot_tracking', models.BooleanField(default=False)),
                ('requires_expiration_tracking', models.BooleanField(default=False)),
                ('shelf_life_days', models.PositiveIntegerField(blank=True, help_text='Shelf life in days', null=True)),
                ('product_url', models.URLField(blank=True, help_text='Manufacturer product page')),
                ('datasheet_url', models.URLField(blank=True, help_text='Technical datasheet URL')),
                ('installation_guide_url', models.URLField(blank=True, help_text='Installation guide URL')),
                ('is_billable', models.BooleanField(default=True, help_text='Can this product be billed to clients?')),
                ('is_purchasable', models.BooleanField(default=True, help_text='Can this product be purchased?')),
                ('is_sellable', models.BooleanField(default=True, help_text='Can this product be sold?')),
                ('custom_fields', models.JSONField(blank=True, default=dict, help_text='Custom product data')),
                ('is_active', models.BooleanField(default=True)),
                ('is_discontinued', models.BooleanField(default=False)),
                ('manufacturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='material.manufacturer')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='material.productcategory')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_name', models.CharField(db_index=True, help_text='Supplier company name', max_length=200)),
                ('supplier_code', models.CharField(help_text='Short code (SUP001, ACME, etc.)', max_length=20, unique=True)),
                ('supplier_type', models.CharField(choices=[('manufacturer', 'Manufacturer'), ('distributor', 'Distributor/Wholesaler'), ('retailer', 'Retailer'), ('service_provider', 'Service Provider'), ('drop_shipper', 'Drop Shipper')], default='distributor', max_length=20)),
                ('primary_contact_name', models.CharField(blank=True, max_length=200)),
                ('primary_contact_title', models.CharField(blank=True, max_length=100)),
                ('primary_email', models.EmailField(blank=True, max_length=254)),
                ('primary_phone', models.CharField(blank=True, max_length=17)),
                ('website', models.URLField(blank=True, help_text='Company website')),
                ('description', models.TextField(blank=True, help_text='Supplier description', max_length=2000)),
                ('logo', models.ImageField(blank=True, help_text='Supplier logo', null=True, upload_to='uploads/suppliers/logos/%Y/%m/%d/')),
                ('payment_terms', models.CharField(default='Net 30', help_text='Standard payment terms', max_length=50)),
                ('minimum_order', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum order amount', max_digits=10, null=True)),
                ('quality_rating', models.PositiveIntegerField(blank=True, choices=[(1, '1 - Poor'), (2, '2 - Below Average'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], help_text='Quality rating (1-5 stars)', null=True)),
                ('delivery_rating', models.PositiveIntegerField(blank=True, choices=[(1, '1 - Poor'), (2, '2 - Below Average'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], help_text='Delivery rating (1-5 stars)', null=True)),
                ('service_rating', models.PositiveIntegerField(blank=True, choices=[(1, '1 - Poor'), (2, '2 - Below Average'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], help_text='Service rating (1-5 stars)', null=True)),
                ('contract_details', models.TextField(blank=True, help_text='Contract terms and details')),
                ('contract_start_date', models.DateField(blank=True, null=True)),
                ('contract_end_date', models.DateField(blank=True, null=True)),
                ('google_maps_url', models.URLField(blank=True, help_text='Google Maps link to location')),
                ('is_active', models.BooleanField(default=True)),
                ('is_preferred', models.BooleanField(default=False, help_text='Preferred supplier?')),
            ],
            options={
                'ordering': ['company_name'],
                'indexes': [models.Index(fields=['company_name'], name='material_su_company_074600_idx'), models.Index(fields=['supplier_type'], name='material_su_supplie_5b3456_idx'), models.Index(fields=['is_active', 'is_preferred'], name='material_su_is_acti_937720_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProductSupplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('supplier_part_number', models.CharField(blank=True, max_length=100)),
                ('supplier_cost', models.DecimalField(decimal_places=4, help_text='Cost from this supplier', max_digits=18)),
                ('minimum_order_quantity', models.PositiveIntegerField(default=1)),
                ('lead_time_days', models.PositiveIntegerField(default=7, help_text='Lead time in days')),
                ('last_order_date', models.DateField(blank=True, null=True)),
                ('total_orders', models.PositiveIntegerField(default=0)),
                ('is_primary_supplier', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='material.product')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='material.supplier')),
            ],
            options={
                'ordering': ['-is_primary_supplier', 'supplier_cost'],
                'unique_together': {('product', 'supplier')},
            },
        ),
        migrations.AddField(
            model_name='product',
            name='suppliers',
            field=models.ManyToManyField(help_text='Suppliers who carry this product', related_name='products', through='material.ProductSupplier', to='material.supplier'),
        ),
        migrations.AddField(
            model_name='manufacturer',
            name='suppliers',
            field=models.ManyToManyField(blank=True, help_text='Suppliers who carry this manufacturer', related_name='manufacturers', to='material.supplier'),
        ),
        migrations.CreateModel(
            name='InventoryTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transaction_type', models.CharField(choices=[('receipt', 'Stock Receipt'), ('issue', 'Stock Issue/Usage'), ('adjustment', 'Stock Adjustment'), ('transfer', 'Transfer'), ('return', 'Return'), ('write_off', 'Write-off')], max_length=20)),
                ('quantity', models.DecimalField(decimal_places=4, max_digits=12)),
                ('previous_stock', models.DecimalField(decimal_places=4, max_digits=12)),
                ('new_stock', models.DecimalField(decimal_places=4, max_digits=12)),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('total_value', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('reference_number', models.CharField(blank=True, help_text='PO number, invoice number, etc.', max_length=100)),
                ('reason', models.CharField(blank=True, help_text='Reason for transaction', max_length=200)),
                ('created_by', models.CharField(blank=True, help_text='Who created this transaction', max_length=100)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='material.product')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='material.supplier')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['sku'], name='material_pr_sku_80d134_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category', 'is_active'], name='material_pr_categor_0e4be6_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['manufacturer'], name='material_pr_manufac_cd62bc_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['current_stock'], name='material_pr_current_7c1bf8_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['minimum_stock'], name='material_pr_minimum_3a30a9_idx'),
        ),
        migrations.AddIndex(
            model_name='manufacturer',
            index=models.Index(fields=['company_name'], name='material_ma_company_63059c_idx'),
        ),
        migrations.AddIndex(
            model_name='manufacturer',
            index=models.Index(fields=['is_active'], name='material_ma_is_acti_75e102_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorytransaction',
            index=models.Index(fields=['product', 'transaction_type'], name='material_in_product_d93e58_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorytransaction',
            index=models.Index(fields=['created_at'], name='material_in_created_8f47f3_idx'),
        ),
    ]
